[0;35m========================================[0m
[0;35m错误处理与日志记录功能测试[0m
[0;35m========================================[0m
测试时间: Tue Oct 21 18:44:27 CST 2025
测试URL: http://localhost:8088/api
测试用户: errortest_1761043467

[1;33m设置测试用户...[0m
注册响应: {"code":201,"message":"用户注册成功","data":{"email":"errortest_1761043467@example.com","user_id":11,"username":"errortest_1761043467"}}
登录响应: {"code":200,"message":"登录成功","data":{"email":"errortest_1761043467@example.com","token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxMSwidXNlcm5hbWUiOiJlcnJvcnRlc3RfMTc2MTA0MzQ2NyIsImV4cCI6MTc2MTEyOTg2NywiaWF0IjoxNzYxMDQzNDY3fQ.Qy91ZvdQrE5X6mbRHl_kihKK8PA4ZwlsjqSmJp2FmXc","user_id":11,"username":"errortest_1761043467"}}
[0;32m✓ 用户设置成功，获取到JWT token[0m
JWT Token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkI...

[0;34m=== 步骤 1: HTTP状态码错误处理测试 ===[0m
[1;33m执行测试: 400错误 - 无效注册数据[0m
请求: POST /register
head: illegal line count -- -1
响应状态码: 400
响应内容: 
[0;32m✓ 400错误 - 无效注册数据: 通过[0m
[0;36m详情: 状态码匹配: 400[0m

[1;33m执行测试: 400错误 - 无效登录数据[0m
请求: POST /login
head: illegal line count -- -1
响应状态码: 400
响应内容: 
[0;32m✓ 400错误 - 无效登录数据: 通过[0m
[0;36m详情: 状态码匹配: 400[0m

[1;33m执行测试: 401错误 - 用户认证失败[0m
请求: POST /login
head: illegal line count -- -1
响应状态码: 401
响应内容: 
[0;32m✓ 401错误 - 用户认证失败: 通过[0m
[0;36m详情: 状态码匹配: 401[0m

[1;33m执行测试: 401错误 - 未认证用户访问受保护接口[0m
请求: POST /posts
head: illegal line count -- -1
响应状态码: 401
响应内容: 
[0;32m✓ 401错误 - 未认证用户访问受保护接口: 通过[0m
[0;36m详情: 状态码匹配: 401[0m

[1;33m执行测试: 404错误 - 文章不存在[0m
请求: GET /posts/99999
head: illegal line count -- -1
响应状态码: 404
响应内容: 
[0;32m✓ 404错误 - 文章不存在: 通过[0m
[0;36m详情: 状态码匹配: 404[0m

[1;33m执行测试: 404错误 - 文章评论不存在[0m
请求: GET /posts/99999/comments
head: illegal line count -- -1
响应状态码: 200
响应内容: 
[0;31m✗ 404错误 - 文章评论不存在: 失败[0m
[0;36m详情: 期望状态码: 404, 实际状态码: 200[0m

[1;33m执行测试: 404错误 - 更新不存在的文章[0m
请求: PUT /posts/99999
head: illegal line count -- -1
响应状态码: 404
响应内容: 
[0;32m✓ 404错误 - 更新不存在的文章: 通过[0m
[0;36m详情: 状态码匹配: 404[0m

[1;33m执行测试: 409错误 - 用户名已存在[0m
请求: POST /register
head: illegal line count -- -1
响应状态码: 409
响应内容: 
[0;31m✗ 409错误 - 用户名已存在: 失败[0m
[0;36m详情: 期望状态码: 400, 实际状态码: 409[0m

[1;33m执行测试: 409错误 - 邮箱已存在[0m
请求: POST /register
head: illegal line count -- -1
响应状态码: 409
响应内容: 
[0;31m✗ 409错误 - 邮箱已存在: 失败[0m
[0;36m详情: 期望状态码: 400, 实际状态码: 409[0m


[0;34m=== 步骤 2: 数据库连接错误处理测试 ===[0m
[1;33m执行测试: 数据库连接错误处理[0m
注意: 此测试需要模拟数据库连接失败的情况
建议手动停止数据库服务，然后测试API响应
[0;36mℹ 数据库连接错误处理: 信息[0m
[0;36m详情: 需要手动测试数据库连接失败场景[0m


[0;34m=== 步骤 3: 数据验证错误处理测试 ===[0m
[1;33m执行测试: 数据验证 - 缺少必填字段[0m
请求: POST /register
head: illegal line count -- -1
响应状态码: 400
响应内容: 
[0;32m✓ 数据验证 - 缺少必填字段: 通过[0m
[0;36m详情: 状态码匹配: 400[0m

[1;33m执行测试: 数据验证 - 缺少文章内容[0m
请求: POST /posts
head: illegal line count -- -1
响应状态码: 400
响应内容: 
[0;32m✓ 数据验证 - 缺少文章内容: 通过[0m
[0;36m详情: 状态码匹配: 400[0m

[1;33m执行测试: 数据验证 - 无效邮箱格式[0m
请求: POST /register
head: illegal line count -- -1
响应状态码: 400
响应内容: 
[0;32m✓ 数据验证 - 无效邮箱格式: 通过[0m
[0;36m详情: 状态码匹配: 400[0m

[1;33m执行测试: 数据验证 - 标题过长[0m
请求: POST /posts
head: illegal line count -- -1
响应状态码: 500
响应内容: 
[0;31m✗ 数据验证 - 标题过长: 失败[0m
[0;36m详情: 期望状态码: 400, 实际状态码: 500[0m


[0;34m=== 步骤 4: JWT认证错误处理测试 ===[0m
[1;33m执行测试: 无效JWT格式[0m
head: illegal line count -- -1
响应状态码: 401
响应内容: 
[0;32m✓ 无效JWT格式: 通过[0m
[0;36m详情: 正确拒绝无效JWT格式[0m

[1;33m执行测试: 过期JWT测试[0m
注意: 此测试需要生成过期的JWT token
[0;36mℹ 过期JWT测试: 信息[0m
[0;36m详情: 需要手动生成过期JWT进行测试[0m

[1;33m执行测试: 无Authorization头测试[0m
head: illegal line count -- -1
响应状态码: 401
响应内容: 
[0;32m✓ 无Authorization头测试: 通过[0m
[0;36m详情: 正确拒绝无认证头请求[0m


[0;34m=== 步骤 5: 业务逻辑错误处理测试 ===[0m
[1;33m执行测试: 权限不足测试[0m
创建第二个用户进行权限测试...
head: illegal line count -- -1
第二个用户创建的文章ID: 
[1;33m执行测试: 权限不足 - 更新他人文章[0m
请求: PUT /posts/
head: illegal line count -- -1
响应状态码: 404
响应内容: 
[0;31m✗ 权限不足 - 更新他人文章: 失败[0m
[0;36m详情: 期望状态码: 403, 实际状态码: 404[0m

[1;33m执行测试: 权限不足 - 删除他人文章[0m
请求: DELETE /posts/
head: illegal line count -- -1
响应状态码: 404
响应内容: 
[0;31m✗ 权限不足 - 删除他人文章: 失败[0m
[0;36m详情: 期望状态码: 403, 实际状态码: 404[0m


[0;34m=== 步骤 6: 系统错误处理测试 ===[0m
[1;33m执行测试: 服务器内部错误处理[0m
注意: 此测试需要模拟服务器内部错误
建议通过修改代码或数据库来触发500错误
[0;36mℹ 服务器内部错误处理: 信息[0m
[0;36m详情: 需要手动模拟服务器内部错误[0m

[1;33m执行测试: 服务不可用处理[0m
注意: 此测试需要停止服务器服务
[0;36mℹ 服务不可用处理: 信息[0m
[0;36m详情: 需要手动停止服务进行测试[0m


[0;34m=== 步骤 7: 日志记录功能测试 ===[0m
[1;33m执行测试: 成功操作日志记录[0m
执行一些成功操作，观察日志输出...
[0;32m✓ 成功操作日志记录: 通过[0m
[0;36m详情: 成功操作应该被记录到日志中[0m

[1;33m执行测试: 错误操作日志记录[0m
执行一些错误操作，观察错误日志输出...
[0;32m✓ 错误操作日志记录: 通过[0m
[0;36m详情: 错误操作应该被记录到错误日志中[0m

[1;33m执行测试: 日志格式验证[0m
注意: 此测试需要检查实际的日志文件
建议检查以下日志内容：
1. 时间戳格式
2. 日志级别
3. 请求信息
4. 响应状态码
5. 错误详情
[0;36mℹ 日志格式验证: 信息[0m
[0;36m详情: 需要手动检查日志文件格式[0m


[0;34m=== 步骤 8: 错误响应格式测试 ===[0m
[1;33m执行测试: 错误响应结构验证[0m
错误响应: {"code":404,"message":"文章不存在"}
[0;32m✓ 错误响应结构验证: 通过[0m
[0;36m详情: 错误响应包含code字段[0m

[0;32m✓ 错误响应结构验证: 通过[0m
[0;36m详情: 错误响应包含message字段[0m

[1;33m执行测试: 错误信息可读性测试[0m
[0;32m✓ 错误信息可读性测试: 通过[0m
[0;36m详情: 错误信息清晰易懂[0m


[0;34m=== 步骤 9: 边界条件错误处理测试 ===[0m
[1;33m执行测试: 空请求体测试[0m
head: illegal line count -- -1
响应状态码: 400
响应内容: 
[0;32m✓ 空请求体测试: 通过[0m
[0;36m详情: 正确处理空请求体[0m

[1;33m执行测试: 无效JSON格式测试[0m
head: illegal line count -- -1
响应状态码: 400
响应内容: 
[0;32m✓ 无效JSON格式测试: 通过[0m
[0;36m详情: 正确处理无效JSON格式[0m


[0;35m========================================[0m
[0;35m错误处理与日志记录测试总结[0m
[0;35m========================================[0m
总测试数: 29
通过: [0;32m18[0m
失败: [0;31m6[0m

[0;31m❌ 有 6 个测试失败，需要检查相关功能[0m
