basePath: /api
definitions:
  models.CommentRequest:
    properties:
      content:
        type: string
    required:
    - content
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.PostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API支持
    url: http://www.swagger.io/support
  description: 基于Go语言、Gin框架和GORM库开发的个人博客系统后端API文档
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: 个人博客系统API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: 用户登录获取JWT令牌
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.Response'
      summary: 用户登录
      tags:
      - 用户管理
  /posts:
    get:
      consumes:
      - application/json
      description: 获取文章列表，按创建时间倒序排列
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.Response'
      summary: 获取所有文章
      tags:
      - 文章管理
    post:
      consumes:
      - application/json
      description: 创建新文章，需要JWT认证
      parameters:
      - description: 文章信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 创建文章
      tags:
      - 文章管理
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: 删除文章，只有作者可以删除
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效的文章ID
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: 无权限删除此文章
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 删除文章
      tags:
      - 文章管理
    get:
      consumes:
      - application/json
      description: 根据文章ID获取文章详情，包含评论信息
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效的文章ID
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/models.Response'
      summary: 获取单个文章
      tags:
      - 文章管理
    put:
      consumes:
      - application/json
      description: 更新文章内容，只有作者可以修改
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      - description: 文章信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.Response'
        "403":
          description: 无权限修改此文章
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 更新文章
      tags:
      - 文章管理
  /posts/{id}/comments:
    get:
      consumes:
      - application/json
      description: 获取指定文章的所有评论
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效的文章ID
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.Response'
      summary: 获取文章评论
      tags:
      - 评论管理
    post:
      consumes:
      - application/json
      description: 为指定文章创建评论，需要JWT认证
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      - description: 评论信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: 文章不存在
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - BearerAuth: []
      summary: 创建评论
      tags:
      - 评论管理
  /register:
    post:
      consumes:
      - application/json
      description: 创建新用户账户
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 注册成功
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/models.Response'
        "409":
          description: 用户名或邮箱已存在
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.Response'
      summary: 用户注册
      tags:
      - 用户管理
securityDefinitions:
  BearerAuth:
    description: 'JWT认证，格式: Bearer {token}'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
